openapi: 3.0.0
info:
  title: Portal API's
  description: | 
    API's for Moneris Portal
  version: 1.0.0 
servers:
  - url: http://localhost:8080/api/e/v2
    description: Development Server
  - url: https://dev.banyanspace.com/api/e/v2
    description: Staging/Testing Server  
  - url: https://www.banyan.space/api/e/v2
    description: Production Server

components:
  securitySchemes:
    oauth_token:
      type: apiKey
      in: header
      name: oauth_token

tags:
  - name: Customer
  - name: Employee
  - name: Employee Roles
  - name: Permissions
  - name: Floor Plan
  - name: Floor Plan Builder
  # - name: Website Builder
    
paths:
  /restaurant/customer:
    post:
      summary: Add Customer Details
      tags:
        - Customer 
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name: 
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  description: Email ID should be unique across outlet
                phone_number:
                  type: number
                  description: Phone number should be 10 or 11 digits only
                  maxLength: 11
                  minLength: 10
                language:
                  type: string
                  description: English
                source_channel:
                  type: string
                enable_marketing:
                  type: boolean
                  description: Optional value to enable marketing emails for sending mails customer
                assigned_customer_id:
                  type: string
                  description: Customer ID assigned by outlet
                birthday:
                  type: string
                  description: Birthday Of Customer format MM/DD/YYYY
                street_number:
                  type: string
                street_name:
                  type: string
                unit_number:
                  type: string
                city:
                  type: string
                province:
                  type: string
                postal_code:
                  type: string
                notes: 
                  type: string
                  maxLength: 300
              required:
                - first_name
                - last_name
                - email
                - phone_number
              example:
                first_name: Alex
                last_name: John
                email: alexjohn@mailprovider.com
                phone_number: 9111112345
                language: English
                enable_marketing: 0
                source_channel: In-house
                assigned_customer_id: 123XYZ123XYZ
                birthday: 01/01/2000
                street_number: 1-2-3
                street_name: Example Street
                unit_number: 123
                city: Toronto
                province: Ontario
                postal_code: A1D2C2
                notes: Test notes

      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  customer_id: 
                    type: number
                    example: 123
                    description: On Success, the customer ID is returned
        '400':
          description: "Failed Response: Email ID already exists"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: "email id already exists for outlet"
                  status_code:
                    type: number
                    example: 400
    get:
      summary: Get Customer Details
      tags:
        - Customer 
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: customer_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200': 
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  customer_id: 
                    type: number
                    example: 123
                  first_name: 
                    type: string
                    example: Alex
                  last_name: 
                    type: string
                    example: John
                  email: 
                    type: string
                    example: alexjohn@mailprovider.com
                  phone_number: 
                    type: number
                    example: 9111112345
                  language: 
                    type: string
                    example: English
                  enable_marketing: 
                    type: boolean
                    example: 1
                  source_channel: 
                    type: string
                    example: In-house
                  assigned_customer_id: 
                    type: string
                    example: 123XYZ123XYZ
                  birthday: 
                    type: string
                    example: 01/01/2000
                  street_number: 
                    type: string
                    example: 1A
                  street_name: 
                    type: string
                    example: Hi Tech City
                  unit_number: 
                    type: string
                    example: 1A
                  city: 
                    type: string
                    example: Hyderabad
                  province: 
                    type: string
                    example: ""
                  postal_code: 
                    type: string
                    example: ""
                  notes: 
                    type: string
                    example: "Notes with max 300 character with spaces"
    put:
      summary: Update Customer Details
      tags:
        - Customer 
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id: 
                  type: number
                  example: 123
                first_name: 
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  description: Email ID should be unique across outlet
                phone_number:
                  type: number
                  description: Phone number should be 10 or 11 digits only
                  maxLength: 11
                  minLength: 10
                language:
                  type: string
                  description: English
                enable_marketing:
                  type: boolean
                  description: Optional value to enable marketing emails for sending mails customer
                assigned_customer_id:
                  type: string
                  description: Customer ID assigned by outlet
                birthday:
                  type: string
                  description: Birthday Of Customer format MM/DD/YYYY
                street_number:
                  type: string
                street_name:
                  type: string
                unit_number:
                  type: string
                city:
                  type: string
                postal_code:
                  type: string
                notes: 
                  type: string
                  maxLength: 300
              example:
                customer_id: 123
                first_name: Alex
                last_name: John
                email: alexjohn@mailprovider.com
                phone_number: 9111112345
                language: English
                enable_marketing: 1
                assigned_customer_id: 123XYZ123XYZ
                birthday: 01/01/2000
                street_number: 1-2-3
                street_name: Example Street
                unit_number: 123
                city: Toronto
                province: Ontario
                postal_code: A1D2C2
                notes: Test notes

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
                  status_code:
                    type: number
                    example: 200
    delete:
      summary: Delete Customer Details
      tags:
        - Customer 
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: delete_customer_id
          schema:
            type: string
            example: 123, 124, 125
          required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
                  status_code:
                    type: number
                    example: 200
  
  /restaurant/customer/all:
    get: 
      summary: Get All Customers
      tags:
        - Customer 
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            example: 25
          required: true
        - in: query
          name: offset
          schema:
            type: number
            example: 0
          required: true
        - in: query
          name: sortBy
          schema: 
            type: string 
            example: name or email or registered_on
        - in: query
          name: orderBy
          schema: 
            type: string 
            example: asc or desc
        - in: query
          name: search_text
          schema:
            type: string
            example: test@test.com
      responses:
        '200':
            description: "Successful Response"
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    total: 
                      type: string
                      example: 100
                    customers:
                      type: array
                      items:
                        type: object
                        properties:
                          customer_id:
                            type: number
                          name:
                            type: string
                          email:
                            type: string
                          phone_number:
                            type: number
                          registered_on:
                            type: string
                          language:
                            type: string
                      example: 
                        - customer_id: 123
                          name: Test Customer 1
                          email: test1@mailprovider.com
                          phone_number: 9999999999
                          registered_on: 12345689234
                          language: English
                        - customer_id: 123
                          name: Test Customer 2
                          email: test2@mailprovider.com
                          phone_number: 9999999999
                          registered_on: 12345689234
                          language: English
        '400': 
          description: "Successful Response"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status_code: 
                    type: number
                  status:
                    type: string
                    example: "Invalid sortBy Value"
                  
  /restaurant/customer/export:
      get: 
        summary: Get All Customers for Export
        tags:
          - Customer 
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: limit
            schema:
              type: number
              example: 25
            required: true
          - in: query
            name: offset
            schema:
              type: number
              example: 0
            required: true
          - in: query
            name: sortBy
            schema: 
              type: string 
              example: name or email or registered_on
          - in: query
            name: orderBy
            schema: 
              type: string 
              example: asc or desc
        responses:
          '200':
              description: "Successful Response"
              content:
                application/json:
                  schema: 
                    type: array
                    items:
                      type: object
                      properties:
                        customer_id:
                          type: number
                        name:
                          type: string
                        email:
                          type: string
                        phone_number:
                          type: number
                        language:
                          type: string
                        source_channel:
                          type: string
                        registered_on:
                          type: string
                        assigned_customer_id:
                          type: string
                        birthday:
                          type: string
                        street_number:
                          type: string
                        street_name:
                          type: string
                        unit_number:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
                        postal_code:
                          type: string
                        notes: 
                          type: string
                          maxLength: 300
                    example: 
                      - customer_id: 123
                        first_name: Test
                        last_name: Customer 2
                        email: test1@mailprovider.com
                        phone_number: 9999999999
                        language: English
                        registered_on: 12345689234
                        assigned_customer_id: 123XYZ123XYZ
                        source_channel: In-house
                        birthday: 01/01/2000
                        street_number: 1A
                        street_name: Hi Tech City
                        unit_number: 1A
                        city: Hyderabad
                        province: ""
                        postal_code: ""
                        notes: "Notes with max 300 character with spaces"
                      - customer_id: 123
                        first_name: Test
                        last_name: Customer 1
                        email: test2@mailprovider.com
                        phone_number: 9999999999
                        language: English
                        registered_on: 12345689234
                        source_channel: Ubereats
                        assigned_customer_id: 123XYZ123XYZ
                        birthday: 01/01/2000
                        street_number: 1A
                        street_name: Hi Tech City
                        unit_number: 1A
                        city: Hyderabad
                        province: ""
                        postal_code: ""
                        notes: "Notes with max 300 character with spaces"

  /restaurant/customer/import:
      post: 
        summary: Get All Customers for Export
        tags:
          - Customer 
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
                  schema: 
                    type: array
                    items:
                      type: object
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                        phone_number:
                          type: number
                        language:
                          type: string
                        source_channel:
                          type: string
                        assigned_customer_id:
                          type: string
                        birthday:
                          type: string
                        street_number:
                          type: string
                        street_name:
                          type: string
                        unit_number:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
                        postal_code:
                          type: string
                        notes: 
                          type: string
                          maxLength: 300
                    example:
                      - first_name: Test
                        last_name: Customer 2
                        email: test1@mailprovider.com
                        phone_number: 9999999999
                        language: English
                        assigned_customer_id: 123XYZ123XYZ
                        source_channel: In-house
                        birthday: 01/01/2000
                        street_number: 1A
                        street_name: Hi Tech City
                        unit_number: 1A
                        city: Hyderabad
                        province: ""
                        postal_code: ""
                        notes: "Notes with max 300 character with spaces"
                      - first_name: Test
                        last_name: Customer 1
                        email: test2@mailprovider.com
                        phone_number: 9999999999
                        language: English
                        source_channel: In-house
                        assigned_customer_id: 123XYZ123XYZ
                        birthday: 01/01/2000
                        street_number: 1A
                        street_name: Hi Tech City
                        unit_number: 1A
                        city: Hyderabad
                        province: ""
                        postal_code: ""
                        notes: "Notes with max 300 character with spaces"

        responses:
          '200':
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    status_code:
                      type: number
                      example: 200
  
  /restaurant/customer/check:
    put:
      summary: Check Customer Email Exists or Not
      tags:
        - Customer 
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: alexjohn@mailprovider.com
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  exist: 
                    type: string
                    example: true/false
                    description: On Email Exists, True is returned else False

  /restaurant/employee:
    post:
      summary: Create Employee
      tags:
        - Employee
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                role_id:
                  type: integer
                status:
                  type: boolean
                email:
                  type: string
                username:
                  type: string
                temp_pin:
                  type: integer
                language:
                  type: string
              required:
                - first_name
                - last_name
                - role_id
                - email
              example:
                first_name: Alex
                last_name: John
                role_id: 1
                status: 1
                email: test@mailprovider.com
                username: alexjohn
                temp_pin: 123
                language: English
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: number
                    example: 200

    put:
      summary: Edit Employee
      tags:
        - Employee
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                role_id:
                  type: integer
                status:
                  type: boolean
                email:
                  type: string
                username:
                  type: string
                temp_pin:
                  type: integer
                language:
                  type: string
              required:
                - employee_id
                - first_name
                - last_name
                - role_id
                - email
              example:
                employee_id: 1
                first_name: Alex
                last_name: John
                role_id: 1
                status: 1
                email: test@mailprovider.com
                username: alexjohn
                temp_pin: 123
                language: English
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: number
                    example: 200
    
    get:
      summary: Get Employee Details
      tags:
        - Employee
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: employee_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee_id:
                    type: string
                  first_name:
                    type: string
                  last_name: 
                    type: string
                  role_id: 
                    type: integer
                  status:
                    type: boolean
                  language:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  temp_pin:
                    type: string
                  assigned_employee_id:
                    type: string
                  phone_number: 
                    type: number
                  birthday:
                    type: string
                    description: Birthday Of Employee format MM/DD/YYYY
                  street_number:
                    type: string
                  street_name:
                    type: string
                  unit_number:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  postal_code:
                    type: string
                  notes: 
                    type: string
                    maxLength: 300
                example:
                  employee_id: 1
                  first_name: Alex
                  last_name: John
                  role_id: 123
                  status: 1
                  language: English
                  email: test1@mailprovider.com
                  username: alexjohn
                  temp_pin: '****'
                  assigned_employee_id: 123
                  phone_number: 1234567890
                  birthday: '01/01/2000'
                  street_number: 1B
                  street_name: ""
                  unit_number: ""
                  city: "Hyderabad"
                  province: ""
                  postal_code: ""
                  notes: ""
    
    delete:
      summary: Delete Employees
      tags:
        - Employee
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: delete_employee_id
          schema:
            type: string
            example: 1,2,3
      responses:
          '200':
            description: ""
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    status_code:
                      type: number
                      example: 200 

  /restaurant/employee/all:
    get:
      summary: Get All Employees
      tags:
        - Employee 
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            example: 25
          required: true
        - in: query
          name: offset
          schema:
            type: number
            example: 0
          required: true
        - in: query
          name: sortBy
          schema: 
            type: string 
            example: name or email or username or role or status
        - in: query
          name: orderBy
          schema: 
            type: string 
            example: asc or desc
        - in: query
          name: filterBy
          schema: 
            type: string 
            example: role,1 or status,1
            description: 'To filter by Roles add - role,role_id in query params'
        - in: query
          name: search_text
          schema:
            type: string
            example: Alex
      responses:
        '200':
            description: "Successful Response"
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    total: 
                      type: string
                      example: 100
                    employees:
                      type: array
                      items:
                        type: object
                        properties:
                          employee_id:
                            type: integer
                          full_name: 
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                          role_id: 
                            type: integer
                          role_name:
                            type: string
                          status:
                            type: boolean
                          language:
                            type: string
                      example:
                        - employee_id: 123
                          full_name: Alex John
                          email: test1@mailprovider.com
                          username: Alex
                          role_id: 13
                          role_name: Administrator
                          status: 1
                          language: English
                        - employee_id: 122
                          full_name: Alex Mans
                          email: test2@mailprovider.com
                          username: Alex
                          role_id: 12
                          role_name: Super Admin
                          status: 0
                          language: English

  /restaurant/employee/export:
    get:
      summary: Get All Employees for Export
      tags:
        - Employee 
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: sortBy
          schema: 
            type: string 
            example: name or email or username or role or status
        - in: query
          name: orderBy
          schema: 
            type: string 
            example: asc or desc
        - in: query
          name: filterBy
          schema: 
            type: string 
            example: role,1 or status,1
            description: 'To filter by Roles add - role,role_id in query params'
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_on:
                    type: string
                  employee_id:
                    type: string
                  first_name:
                    type: string
                  last_name: 
                    type: string
                  role_id: 
                    type: integer
                  status:
                    type: boolean
                  language:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  temp_pin:
                    type: string
                  assigned_employee_id:
                    type: string
                  phone_number: 
                    type: number
                  birthday:
                    type: string
                    description: Birthday Of Employee format MM/DD/YYYY
                  street_number:
                    type: string
                  street_name:
                    type: string
                  unit_number:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  postal_code:
                    type: string
                  notes: 
                    type: string
                    maxLength: 300
                example:
                  registered_on: '01/01/2020'
                  employee_id: 1
                  first_name: Alex
                  last_name: John
                  role_id: 123
                  status: 1
                  language: English
                  email: test1@mailprovider.com
                  username: alexjohn
                  temp_pin: '****'
                  assigned_employee_id: 123
                  phone_number: 1234567890
                  birthday: '01/01/2000'
                  street_number: 1B
                  street_name: ""
                  unit_number: ""
                  city: "Hyderabad"
                  province: ""
                  postal_code: ""
                  notes: ""

  /restaurant/employee/check:
    put:
      summary: Check Employee Email Exists or Not
      tags:
        - Employee 
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: alexjohn@mailprovider.com
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  exist: 
                    type: string
                    example: true/false
                    description: On Email Exists, True is returned else False

  /restaurant/employee/roles:
    post:
      summary: Create Employee Role
      tags:
        - Employee Roles
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the role
                  example: Manager
                description:
                  type: string
                  description: Role Description
                  example: Has access to all reports 
                permissions:
                  type: array
                  description: List of Permission Identifiers
                  items:
                    type: integer 
                  example: 
                    - 123
                    - 124
      responses:
        '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200  
    
    get:
        summary: Get Employee Role
        tags:
          - Employee Roles
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: role_id
            schema:
              type: number
              example: 1
            required: true
        responses:
          '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      role_id:
                        type: integer
                        example: 123
                      name:
                        type: string
                        description: Name of the role
                        example: Manager
                      description:
                        type: string
                        description: Role Description
                        example: Has access to all reports
                      role_namespace:
                        type: array
                        items:
                          example: Portal, Kitchen Display
                      permissions:
                        type: array
                        description: List of Permission Identifiers
                        items:
                          type: integer 
                        example:
                          - 123
                          - 124
                          - 13

    put:
      summary: Edit Employee Role
      tags:
        - Employee Roles
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id: 
                  type: integer
                  example: 12
                name:
                  type: string
                  description: Name of the role
                  example: Manager
                description:
                  type: string
                  description: Role Description
                  example: Has access to all reports 
                permissions:
                  type: array
                  description: List of Permission Identifiers
                  items:
                    type: integer 
                  example:
                    - 123
                    - 124
                    - 13
      responses:
        '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200 
    
    delete:
      summary: Delete Employee Role
      tags:
        - Employee Roles
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: delete_role_id
          schema:
            type: string
            example: 123, 124
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
                  status_code:
                    type: number
                    example: 200
      
  /restaurant/employee/roles/all:
    get:
      summary: Get All Employee Roles
      tags:
        - Employee Roles
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: limit
          schema:
            type: number
            example: 25
          required: true
        - in: query
          name: offset
          schema:
            type: number
            example: 0
          required: true
        - in: query
          name: sortBy
          schema:
            type: string
            example: "name or role_assigned_count"
        - in: query
          name: orderBy
          schema:
            type: string
            example: "asc or desc"
        - in: query
          name: search_text
          schema:
            type: string
            example: Manager
      responses:
          '200':
                description: ""
                content:
                  application/json:
                    schema: 
                      type: object
                      properties:
                        total: 
                          type: integer
                          example: 2
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              role_id:
                                type: integer
                              name:
                                type: integer
                              role_namespace:
                                type: array
                                items:
                                  type: string
                              role_count:
                                type: integer
                          example:
                            - role_id: 123
                              name: Manager
                              role_application: [Portal]
                              role_count: 12
                            - role_id: 123
                              name: Kitchen Chef
                              role_application: [Kitchen Display]
                              role_count: 0
  
  /restaurant/employee/role/check:
    put:
      summary: Check Employee Email Exists or Not
      tags:
        - Employee Roles 
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Manager
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  exist: 
                    type: string
                    example: true/false
                    description: On Manager Exists, True is returned else False
  
  /restaurant/permissions:
    get:
      summary: Get All Available Permissions
      tags:
        - Permissions
      security:
        - oauth_token:  []
      responses:
          '200':
                description: "Lists all permissions with modules of permissions"
                content:
                  application/json:
                    schema: 
                      type: object
                      properties:
                        modules:
                          type: array
                          items:
                            type: object
                            properties:
                              module_id:
                                type: integer
                              module_name:
                                type: string
                          example:
                            - module_id: 1
                              module_name: Reports
                            - module_id: 2
                              module_name: Inventory
                            - module_id: 3
                              module_name: Online Order
                        permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_id:
                                type: integer
                              permission_name: 
                                type: string
                              module_id: 
                                type: integer
                              application:
                                type: string
                              is_configurable:
                                type: boolean
                              config_requires:
                                type: string
                          example:
                            - permission_id: 1
                              permission_name: Dashboard
                              module_id: 1
                              application_id: 1
                              is_configurable: 0
                              config_requires: null
                            - permission_id: 2
                              permission_name: Kitchen Settings
                              module_id: 2
                              application_id: 2
                              is_configurable: 1
                              config_requires: kitchen_id
                            - permission_id: 2
                              permission_name: Discount Operation
                              module_id: 3
                              application_id: 2
                              is_configurable: 0
                              config_requires: null
                        applications:
                          type: array
                          items:
                            type: object
                            properties:
                              application_id:
                                type: integer
                              application_name:
                                type: string
                          example:
                            - application_id: 1
                              application_name: Portal
                            - application_id: 2
                              application_name: KDS
                            - application_id: 3
                              application_name: Restaurant App
  /restaurant/menu/categories:
    get:
      summary: Get categories
      tags:
        - Categories
      security:
        - oauth_token:  []
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    cat_id:
                      type: number
                    last_updated_on:
                      type: number
                    name:
                      type: string
                    order:
                      type: number
                example:
                  - cat_id: 1
                    last_updated_on: 1699945233
                    name: category 1
                    order: 1
                  - cat_id: 2
                    last_updated_on: 1699945233
                    name: category 2
                    order: 2
                    
    post:
      summary: create categories
      tags:
        - Categories
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  category_name:
                    type: string
                    example: category 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok

    put:
      summary: update categories
      tags:
        - Categories
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: category 1
                  cat_id:
                    type: number
                    example: 1
                  order:
                    type: number
                    example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok

    delete:
      summary: delete categories
      tags:
        - Categories
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: cat_id
          schema:
            type: number
            example: 1
          required: true
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
  /restaurant/menu/items/category_id:
    get:
      summary: Get items via category ID
      tags:
        - Categories
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: category_id
          schema:
            type: number
            example: 3
          required: true
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      type: number
                    name:
                      type: string
                    available:
                      type: boolean
                    position:
                      type: number
                    img_url:
                      type: string
                    last_updated_on:
                      type: number
                    item_type:
                      type: string
                example:
                  - item_id: 1
                    last_updated_on: 1699945233
                    name: item 1
                    available: true
                    position: 0
                    img_url: ""
                    item_type: Food
                  - item_id: 2
                    last_updated_on: 1699945233
                    name: item 2
                    available: true
                    position: 0
                    img_url: ""
                    item_type: byo
                  - item_id: 3
                    last_updated_on: 1699945233
                    name: item 3
                    available: true
                    position: 0
                    img_url: ""
                    item_type: combo
  /restaurant/menu/alochol:
    post:
      summary: create Alochol
      tags:
        - Alcohol
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  cat_id:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Alcohol
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_multi_quantity:
                          type: string
                          example: 1
                        allow_multi_select:
                          type: string
                          example: 1
                        is_mandatory:
                          type: boolean
                          example: true
                        maximum_quantity:
                          type: number
                          example: 2
                        maximum_select:
                          type: number
                          example: 2
                        minimum_quantity:
                          type: number
                          example: 1
                        minimum_select:
                          type: number
                          example: 1
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
    get:
      summary: get Alcohol item
      tags:
        - Alcohol
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: item_id
          schema:
            type: number
            example: 101
          required: true
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  item_id:
                    type: number
                    example: 101
                  cat_id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: item 1
                  description:
                    type: string
                    example: ""
                  g_availability:
                    type: number
                    example: 1
                  is_out_of_stock:
                    type: number
                    example: 0
                  img_url:
                    type: string
                    example: null
                  pricing_type:
                    type: number
                    example: 0
                  position:
                    type: number
                    example: 0
                  base_price:
                    type: number
                    example: 1.0
                  item_type:
                    type: string
                    example: Alcohol
                  tax_mode:
                    type: string
                    example: Standard
                  serving:
                    type: array
                    items:
                      type: object
                      properties:
                        serving_id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: base
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        otype_id:
                          type: number
                          example: 1
                        otype_name:
                          type: string
                          example: Dine-in
                        availability:
                          type: boolean
                          example: true
                        price:
                          type: array
                          items:
                            example: 1.0
                        packaging_charges:
                          type: array
                          items:
                            example: 0.0
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        serving_id:
                          type: string
                          example: 1
                        addons:
                          type: array
                          items:
                            type: object
                            properties:
                              addon_cat_id:
                                type: number
                                example: 1
                              allow_multi_select:
                                type: boolean
                                example: true
                              minimum_select:
                                type: number
                                example: 1
                              maximum_select:
                                type: number
                                example: 2
                              allow_multi_quantity:
                                type: boolean
                                example: true
                              maximum_quantity:
                                type: number
                                example: 2
                              minimum_quantity:
                                type: number
                                example: 1
                              addon_items:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    addon_id:
                                      type: number
                                      example: 1
                                    addon_item_name:
                                      type: string
                                      example: coke
                                    price:
                                      type: number
                                      example: 1.0
                  combo:
                    type: array
                    items:
                      example:
                  build_your_own:
                    type: array
                    items:
                      example:  
    put:
      summary: Edit Alcohol item
      tags:
        - Alcohol
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  cat_id:
                    type: number
                    example: 1
                  item_id:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Alcohol
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_multi_quantity:
                          type: string
                          example: 1
                        allow_multi_select:
                          type: string
                          example: 1
                        is_mandatory:
                          type: boolean
                          example: true
                        maximum_quantity:
                          type: number
                          example: 2
                        maximum_select:
                          type: number
                          example: 2
                        minimum_quantity:
                          type: number
                          example: 1
                        minimum_select:
                          type: number
                          example: 1
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
    delete:
        summary: delete Alcohol item
        tags:
          - Alcohol
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: id
            schema:
              type: number
              example: 1
            required: true
            description: ""

        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200                 
  /restaurant/menu/items:
    post:
      summary: create item
      tags:
        - items
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  cat_id:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Food
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_multi_quantity:
                          type: string
                          example: 1
                        allow_multi_select:
                          type: string
                          example: 1
                        is_mandatory:
                          type: boolean
                          example: true
                        maximum_quantity:
                          type: number
                          example: 2
                        maximum_select:
                          type: number
                          example: 2
                        minimum_quantity:
                          type: number
                          example: 1
                        minimum_select:
                          type: number
                          example: 1
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
                
    put:
      summary: update item
      tags:
        - items
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  cat_id:
                    type: number
                    example: 1
                  item_id:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Food
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_multi_quantity:
                          type: string
                          example: 1
                        allow_multi_select:
                          type: string
                          example: 1
                        is_mandatory:
                          type: boolean
                          example: true
                        maximum_quantity:
                          type: number
                          example: 2
                        maximum_select:
                          type: number
                          example: 2
                        minimum_quantity:
                          type: number
                          example: 1
                        minimum_select:
                          type: number
                          example: 1
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
                  
    get:
      summary: get item
      tags:
        - items
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: item_id
          schema:
            type: number
            example: 101
          required: true
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  item_id:
                    type: number
                    example: 101
                  cat_id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: item 1
                  description:
                    type: string
                    example: ""
                  g_availability:
                    type: number
                    example: 1
                  is_out_of_stock:
                    type: number
                    example: 0
                  img_url:
                    type: string
                    example: null
                  pricing_type:
                    type: number
                    example: 0
                  position:
                    type: number
                    example: 0
                  base_price:
                    type: number
                    example: 1.0
                  item_type:
                    type: string
                    example: Food
                  tax_mode:
                    type: string
                    example: Standard
                  serving:
                    type: array
                    items:
                      type: object
                      properties:
                        serving_id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: base
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        otype_id:
                          type: number
                          example: 1
                        otype_name:
                          type: string
                          example: Dine-in
                        availability:
                          type: boolean
                          example: true
                        price:
                          type: array
                          items:
                            example: 1.0
                        packaging_charges:
                          type: array
                          items:
                            example: 0.0
                  addons:
                    type: array
                    items:
                      type: object
                      properties:
                        serving_id:
                          type: string
                          example: 1
                        addons:
                          type: array
                          items:
                            type: object
                            properties:
                              addon_cat_id:
                                type: number
                                example: 1
                              allow_multi_select:
                                type: boolean
                                example: true
                              minimum_select:
                                type: number
                                example: 1
                              maximum_select:
                                type: number
                                example: 2
                              allow_multi_quantity:
                                type: boolean
                                example: true
                              maximum_quantity:
                                type: number
                                example: 2
                              minimum_quantity:
                                type: number
                                example: 1
                              addon_items:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    addon_id:
                                      type: number
                                      example: 1
                                    addon_item_name:
                                      type: string
                                      example: coke
                                    price:
                                      type: number
                                      example: 1.0
                  combo:
                    type: array
                    items:
                      example:
                  build_your_own:
                    type: array
                    items:
                      example:
    delete:
        summary: delete items
        tags:
          - items
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: id
            schema:
              type: number
              example: 1
            required: true
            description: ""

        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200
  /restaurant/meu/items/get_all:
    get:
      summary: get all items for dashboard
      tags:
        - Dashboard
      security:
        - oauth_token:  []
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  item_id:
                    type: number
                    example: 101
                  cat_id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: item 1
                  description:
                    type: string
                    example: ""
                  g_availability:
                    type: number
                    example: 1
                  img_url:
                    type: string
                    example: null
                  position:
                    type: number
                    example: 0
                  serving:
                    type: string
                    example: mini
                  serving_ids:
                    type: number
                    example: 11
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        otype_id:
                          type: number
                          example: 1
                        otype_name:
                          type: string
                          example: Dine-in
                        availability:
                          type: boolean
                          example: true
                        price:
                          type: array
                          items:
                            example: 1.0
                        packaging_charges:
                          type: array
                          items:
                            example: 0.0
                      

  /restaurant/menu/pizza:
    post:
      summary: create pizza
      tags:
        - Pizzas
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: pizza
                  cat_id:
                    type: number
                    example: 1
                  base_price:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: byo
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      example:
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
                  serving:
                    type: array
                    items:
                      type: string
                      example: base
                  build_your_own:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_customization:
                          type: number
                        allow_half_half:
                          type: number
                        allow_multiple_selection:
                          type: number
                        byo_type_ingredient_id:
                          type: number
                        ingredient_customization:
                          type: array
                          items:
                            type: string
                        byo_item_ingredients:
                          type: array
                          items:
                            type: object
                            properties:
                              byo_item_ingredient_name:
                                type: string
                              price:
                                type: number
                      example:
                        - allow_customization: 0
                          allow_half_half: 0
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 1
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: large},
                          {price: 7, byo_item_ingredient_name: Medium}]
                        - allow_customization: 0
                          allow_half_half: 0
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 2
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: crust}]
                        - allow_customization: 1
                          allow_half_half: 1
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 3
                          ingredient_customization: [1, 2]
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Tomato sauce}]
                        - allow_customization: 0
                          allow_half_half: 1
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 4
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: cheese}]
                        - allow_customization: 1
                          allow_half_half: 1
                          allow_multiple_selection: 1
                          byo_type_ingredient_id: 5
                          ingredient_customization: [3]
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Toppings}]
                          multiple_selection_config: {
                            minimum: 1, maximum: 1
                          }
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok                    
    put:
      summary: update pizza
      tags:
        - Pizzas
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: pizza
                  cat_id:
                    type: number
                    example: 1
                  base_price:
                    type: number
                    example: 1
                  item_id:
                    type: number
                    example: 1
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: byo
                  pricing_type:
                    type: string
                    example: Variable
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      example:
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
                  serving:
                    type: array
                    items:
                      type: string
                      example: base
                  build_your_own:
                    type: array
                    items:
                      type: object
                      properties:
                        allow_customization:
                          type: number
                        allow_half_half:
                          type: number
                        allow_multiple_selection:
                          type: number
                        byo_type_ingredient_id:
                          type: number
                        ingredient_customization:
                          type: array
                          items:
                            type: string
                        byo_item_ingredients:
                          type: array
                          items:
                            type: object
                            properties:
                              byo_item_ingredient_name:
                                type: string
                              price:
                                type: number
                      example:
                        - allow_customization: 0
                          allow_half_half: 0
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 1
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: large,
                            byo_type_ingredient_id: 1,
                            byo_item_ingredient_config_id: 1409
                          }]
                          multiple_selection_config: {minimum: 1, maximium: 1}
                        - allow_customization: 0
                          allow_half_half: 0
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 2
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: crust, byo_type_ingredient_id: 2, byo_item_ingredient_config_id: 1483}]
                          multiple_selection_config: {minimum: 1, maximium: 1}
                        - allow_customization: 1
                          allow_half_half: 1
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 3
                          ingredient_customization: [{
                            byo_item_ingredient_customization_id: 252,
                            byo_type_ingredient_customization_id: 1
                          },
                          {
                          byo_item_ingredient_customization_id: 253,
                          byo_type_ingredient_customization_id: 2}
                          ]
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Tomato sauce, byo_type_ingredient_id: 3, byo_item_ingredient_config_id: 1484}]
                          multiple_selection_config: {minimum: 1, maximium: 1}
                        - allow_customization: 0
                          allow_half_half: 1
                          allow_multiple_selection: 0
                          byo_type_ingredient_id: 4
                          ingredient_customization: []
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: cheese,
                            byo_type_ingredient_id: 4,
                            byo_item_ingredient_config_id: 1485
                          }]
                          multiple_selection_config: {minimum: 1, maximium: 1}
                        - allow_customization: 1
                          allow_half_half: 1
                          allow_multiple_selection: 1
                          byo_type_ingredient_id: 5
                          ingredient_customization: [{
                            byo_item_ingredient_customization_id: 254,
                            byo_type_ingredient_customization_id: 3
                          }]
                          byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Toppings,
                            byo_type_ingredient_id: 5,
                            byo_item_ingredient_config_id: 1486
                          }]
                          multiple_selection_config: {
                            minimum: 1, maximum: 1
                          }
                          
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
    get:
      summary: get pizza data
      tags:
        - Pizzas
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: pizza_id
          schema:
            type: number
            example: 1
          required: true
      responses:
          '200':
                description: ""
                content:
                  application/json:
                    schema: 
                      type: object
                      properties:
                        name:
                          type: string
                          example: pizza
                        cat_id:
                          type: number
                          example: 1
                        base_price:
                          type: number
                          example: 1
                        item_id:
                          type: number
                          example: 1
                        description:
                          type: string
                          example: add description
                        g_availability:
                          type: boolean
                          example: true
                        image_url:
                          type: string
                          example: null
                        is_out_of_stock:
                          type: number
                          example: 0
                        item_type:
                          type: string
                          example: byo
                        pricing_type:
                          type: string
                          example: Variable
                        tax_mode:
                          type: string
                          example: standard
                        position:
                          type: number
                          example: 1
                        item_type_id:
                          type: number
                          example: 4
                        serving:
                          type: array
                          items:
                            type: object
                            properties:
                              serving_id:
                                type: number
                                example: 1
                              name:
                                type: string
                                example: base
                        prices_availability:
                          type: array
                          items:
                            type: object
                            properties:
                              availability:
                                type: boolean
                                example: true
                              otype_id:
                                type: string
                                example: 9
                              otype_name:
                                type: string
                                example: Dine-in
                              packaging_charges:
                                type: array
                                items:
                                  type: number
                                  example: 0
                              price:
                                type: array
                                items:
                                  type: number
                                  example: 1
                        addons:
                          type: array
                          items:
                            example:
                        combo:
                          type: array
                          items:
                            example:
                        build_your_own:
                          type: array
                          items:
                            type: object
                            properties:
                              allow_customization:
                                type: number
                              allow_half_half:
                                type: boolean
                              allow_multiple_selection:
                                type: boolean
                              byo_type_ingredient_id:
                                type: number
                              ingredient_customization:
                                type: array
                                items:
                                  type: string
                              byo_item_ingredients:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    byo_item_ingredient_name:
                                      type: string
                                    price:
                                      type: number
                            example:
                              - allow_customization: 0
                                allow_half_half: false
                                allow_multiple_selection: false
                                byo_type_ingredient_id: 1
                                ingredient_customization: []
                                byo_item_ingredients: [{price: 10, byo_item_ingredient_name: large,
                                  byo_type_ingredient_id: 1,
                                  byo_item_ingredient_config_id: 1409
                                }]
                                multiple_selection_config: {minimum: 1, maximium: 1}
                              - allow_customization: 0
                                allow_half_half: false
                                allow_multiple_selection: false
                                byo_type_ingredient_id: 2
                                ingredient_customization: []
                                byo_item_ingredients: [{price: 10, byo_item_ingredient_name: crust, byo_type_ingredient_id: 2, byo_item_ingredient_config_id: 1483}]
                                multiple_selection_config: {minimum: 1, maximium: 1}
                              - allow_customization: 1
                                allow_half_half: true
                                allow_multiple_selection: false
                                byo_type_ingredient_id: 3
                                ingredient_customization: [{
                                  byo_item_ingredient_customization_id: 252,
                                  byo_type_ingredient_customization_id: 1
                                },
                                {
                                byo_item_ingredient_customization_id: 253,
                                byo_type_ingredient_customization_id: 2}
                                ]
                                byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Tomato sauce, byo_type_ingredient_id: 3, byo_item_ingredient_config_id: 1484}]
                                multiple_selection_config: {minimum: 1, maximium: 1}
                              - allow_customization: 0
                                allow_half_half: true
                                allow_multiple_selection: false
                                byo_type_ingredient_id: 4
                                ingredient_customization: []
                                byo_item_ingredients: [{price: 10, byo_item_ingredient_name: cheese,
                                  byo_type_ingredient_id: 4,
                                  byo_item_ingredient_config_id: 1485
                                }]
                                multiple_selection_config: {minimum: 1, maximium: 1}
                              - allow_customization: 1
                                allow_half_half: true
                                allow_multiple_selection: false
                                byo_type_ingredient_id: 5
                                ingredient_customization: [{
                                  byo_item_ingredient_customization_id: 254,
                                  byo_type_ingredient_customization_id: 3
                                }]
                                byo_item_ingredients: [{price: 10, byo_item_ingredient_name: Toppings,
                                  byo_type_ingredient_id: 5,
                                  byo_item_ingredient_config_id: 1486
                                }]
                                multiple_selection_config: {
                                  minimum: 1, maximum: 1
                                }
    delete:
        summary: Delete pizza
        tags:
          - Pizzas
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: pizza_id
            schema:
              type: number
              example: 1
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      status_code:
                        type: number
                      message:
                        type: string
                  example:
                    status_code: 200
                    message: Ok      

  /restaurant/menu/combos:
    post:
      summary: create combo
      tags:
        - Combos
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  cat_id:
                    type: number
                    example: 1
                  base_price:
                    type: string
                    example: 10
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Combo
                  pricing_type:
                    type: string
                    example: simple
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      example:
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
                  serving:
                    type: array
                    items:
                      type: string
                      example: base
                  combo:
                    type: array
                    items:
                      type: object
                      properties:
                        combo_selection_items:
                          type: array
                          items:
                            example:
                              - combo_selection_items: [{
                                baseprice: 0,
                                combo_item_name: "item 1",
                                item_id: 1,
                                item_name: "item 1",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                baseprice: 0,
                                combo_item_name: item 2,
                                item_id: 2,
                                item_name: item 2,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 1"
                              - combo_selection_items: [{
                                baseprice: 0,
                                combo_item_name: "item 3",
                                item_id: 1,
                                item_name: "item 3",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                baseprice: 0,
                                combo_item_name: item 4,
                                item_id: 2,
                                item_name: item 4,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 2"
                              
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
    put:
      summary: update combo
      tags:
        - Combos
      security:
        - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  item_id:
                    type: string
                    example: 1
                  cat_id:
                    type: number
                    example: 1
                  base_price:
                    type: string
                    example: 10
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Combo
                  pricing_type:
                    type: string
                    example: simple
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      example:
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
                  serving:
                    type: array
                    items:
                      type: string
                      example: base
                  combo:
                    type: array
                    items:
                      type: object
                      properties:
                        combo_selection_items:
                          type: array
                          items:
                            example:
                              - combo_selection_id: 384
                                combo_selection_items: [{
                                combo_selection_serving_item_id: 20,
                                combo_item_name: "item 1",
                                item_id: 1,
                                item_name: "item 1",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                combo_selection_serving_item_id: 21,
                                combo_item_name: item 2,
                                item_id: 2,
                                item_name: item 2,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 1"
                              - combo_selection_id: 385
                                combo_selection_items: [{
                                combo_selection_serving_item_id: 22,
                                combo_item_name: "item 3",
                                item_id: 1,
                                item_name: "item 3",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                combo_selection_serving_item_id: 22,
                                combo_item_name: item 4,
                                item_id: 2,
                                item_name: item 4,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 2"
                             
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: number
                    message:
                      type: string
                example:
                  status_code: 200
                  message: Ok
    get:
      summary: get combo details
      tags:
        - Combos
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: combo_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: item 1
                  item_id:
                    type: string
                    example: 1
                  cat_id:
                    type: number
                    example: 1
                  base_price:
                    type: string
                    example: 10
                  description:
                    type: string
                    example: add description
                  g_availability:
                    type: boolean
                    example: true
                  image_url:
                    type: string
                    example: null
                  is_out_of_stock:
                    type: number
                    example: 0
                  item_type:
                    type: string
                    example: Combo
                  pricing_type:
                    type: string
                    example: simple
                  tax_mode:
                    type: string
                    example: standard
                  addons:
                    type: array
                    items:
                      example:
                  prices_availability:
                    type: array
                    items:
                      type: object
                      properties:
                        availability:
                          type: boolean
                          example: true
                        otype_id:
                          type: string
                          example: 9
                        packaging_charges:
                          type: array
                          items:
                            type: number
                            example: 0
                        price:
                          type: array
                          items:
                            type: number
                            example: 1
                  serving:
                    type: array
                    items:
                      type: string
                      example: base
                  combo:
                    type: array
                    items:
                      type: object
                      properties:
                        combo_selection_items:
                          type: array
                          items:
                            example:
                              - combo_selection_id: 384
                                combo_selection_items: [{
                                combo_selection_serving_item_id: 20,
                                combo_item_name: "item 1",
                                item_id: 1,
                                item_name: "item 1",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                combo_selection_serving_item_id: 21,
                                combo_item_name: item 2,
                                item_id: 2,
                                item_name: item 2,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 1"
                              - combo_selection_id: 385
                                combo_selection_items: [{
                                combo_selection_serving_item_id: 22,
                                combo_item_name: "item 3",
                                item_id: 1,
                                item_name: "item 3",
                                price: 2,
                                serving_id: 5
                                },
                                {
                                combo_selection_serving_item_id: 22,
                                combo_item_name: item 4,
                                item_id: 2,
                                item_name: item 4,
                                price: 2,
                                serving_id: 6,
                                }]
                                combo_selection_name: "combo selection 2"
    delete:
        summary: Delete combo
        tags:
          - Combos
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: combo_id
            schema:
              type: number
              example: 1
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      status_code:
                        type: number
                      message:
                        type: string
                  example:
                    status_code: 200
                    message: Ok                                    
  /restaurant/floorplan:
    post:
        summary: Create Floor Plan
        tags:
          - Floor Plan
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "Summer"
                  description:
                    type: string
                    example: This floorplan is used in summer season
                  device_name:
                    type: string
                    example: iPhone X
                  number_of_sections:
                    type: number
                    example: 1
                required:
                  - name
                  - description
                  - device_name
                  - number_of_sections

        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200 
    
    put:
        summary: Edit Floor Plan
        tags:
          - Floor Plan
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  floorplan_id: 
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "Summer"
                  description:
                    type: string
                    example: This floorplan is used in summer season
                  device_name:
                    type: string
                    example: iPhone X
                  number_of_sections:
                    type: number
                    example: 1
                  is_active:
                    type: boolean
                    example: 1
                required:
                  - floorplan_id

        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200 
    delete:
        summary: Delete Floor Plan
        tags:
          - Floor Plan
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: floorplan_id
            schema:
              type: number
              example: 1
            required: true
        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200   
                            
    get:
        summary: Get All Floor Plan
        tags:
          - Floor Plan
        security:
          - oauth_token:  []
        responses:
            '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: array
                    items:
                      type: object
                      properties:
                        floorplan_id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: Summer Plan
                        description:
                          type: string
                          example: ""
                        device_name:
                          type: string
                          example: "iPhone X"
                        number_of_sections:
                          type: number
                          example: 2
                        is_active:
                          type: number
                          example: 1
                        last_modified_on:
                          type: number
                          example: 1618559322
                        table_count:
                          type: number
                          example: 10
                        seat_count:
                          type: number
                          example: 40
  
  /restaurant/floorplan/copy:
    post:
      summary: Copy Floor Plan
      tags:
        - Floor Plan    
      security:
          - oauth_token:  []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  floorplan_id: 
                    type: number
                    example: 1
                required:
                  - floorplan_id

      responses:
          '200':
            description: ""
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    status_code:
                      type: number
                      example: 200   

  /restaurant/floorplan/builder:                            
    post:
      summary: Add/Edit Floor Plan Section Layout
      tags:
        - Floor Plan Builder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                floorplan_id: 
                  type: number
                  example: 1
                name:
                  type: string
                  example: Test Section
                section_config:
                  type: object
                section_id:
                  type: number
                  example: 1
                  description: for new section section_id will be zero
                otype_id:
                  type: number 
                  example: 123
                tables:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                        example: TA1
                      seats: 
                        type: number
                        example: 4
                      table_config: 
                        type: object
                objects:
                  type: array
                  items:
                    type: object
                    properties:
                      name:    
                        type: string
                        example: BAR
                      object_config:
                        type: object
                  example: 
                    - name: Plant
                      object_config: {}
                    - name: Wall
                      object_config: {}
                deleted_objects:
                  type: array
                  items:
                    example: 1,2,3
      security:
        - oauth_token:  []
      responses:
        '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      status_code:
                        type: number
                        example: 200 

    get: 
      summary: Get Floor Plan
      tags:
        - Floor Plan Builder            
      parameters:
        - in: query
          name: floorplan_id
          schema:
            type: number
            example: 25
          required: true
      security:
        - oauth_token:  []
      responses:
        '200':
              description: ""
              content:
                application/json:
                  schema: 
                    type: object
                    properties:
                      floorplan_id: 
                        type: number
                        example: 1
                      sections:
                        type: array
                        items:
                          type: object
                          properties:
                            section_id: 
                              type: number
                              example: 1
                            name:
                              type: string
                              example: Test Section
                            otype_id:
                              type: number 
                              example: 123
                            section_config:
                              type: object
                            tables:
                              type: array
                              items:
                                type: object
                                properties:
                                  table_id:
                                    type: number
                                    example: 1
                                  name: 
                                    type: string
                                    example: TA1
                                  seats: 
                                    type: number
                                    example: 4
                                  table_config: 
                                    type: object
                                  object_id:
                                    type: number
                                    example: 12
                            objects:
                              type: array
                              items:
                                type: object
                                properties:
                                  object_id: 
                                    type: number
                                    example: 1
                                  name:    
                                    type: string
                                    example: BAR
                                  object_config:
                                    type: object
                              example: 
                                - object_id: 1
                                  name: Plant
                                  object_config: {}
                                - object_id: 2
                                  name: Wall
                                  object_config: {}

  /restaurant/settings/reservations:
    post:
      summary:  Create and update reservation config
      tags:
        - Reservations Config
      security:
        - oauth_token:  []
      description: |
        <ul>
          <li>slot_duratuion: (time, required) - duration of the slot</li>
          <li>max_reservations_per_slot: (integer, required) - number of reservations per slot</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slot_duration:
                  type: string
                  example: "01:00:00"
                max_reservations_per_slot:
                  type: integer
                  example: 10
                phone_number:
                  type: string
                  example: "16473625296"
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    get:
      summary:  Get Reservations Config
      tags:
        - Reservations Config
      security:
        - oauth_token:  []
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  slot_duration:
                    type: string
                    example: "01:00:00"
                  max_reservations_per_slot:
                    type: integer
                    example: 10
                  phone_number:
                    type: string
                    example: "16473625296"

  /order_delivery_types:
    get:
      summary: Get Order and Delivery Types
      tags:
        - Order Type
      security:
        - oauth_token:  []
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  delivery_modes: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        delivery_mode_id: 
                          type: number
                          example: 1
                        name: 
                          type: string
                          example: Dine In
                        tables_allowed: 
                          type: number
                          example: 1
                  order_channels: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        order_channel_id: 
                          type: number
                          example: 1
                        name: 
                          type: string
                          example: In Restaurant

  /restaurant/settings/ordertype:
    get:
      summary: Get Order Type
      tags: 
        - Order Type
      security:
        - oauth_token:  []
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties: 
                    otype_id: 
                      type: number
                      example: 2446
                    name: 
                      type: string
                      example: Breakfast
                    description: 
                      type: string
                      example: breakfast
                    order_channel_id: 
                      type: number
                      example: 1
                    delivery_mode_id: 
                      type: number
                      example: 1
    post:
      summary: Create Order Type
      tags: 
        - Order Type
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  example: Test Channel 1
                description: 
                  type: string
                  example: Test Order Mode delivery mode
                order_channel_id: 
                  type: number
                  example: 2
                delivery_mode_id: 
                  type: number
                  example: 2
                copy_otype_id: 
                  type: number
                  example: 2
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    
    put:
      summary: Edit Order Type
      tags: 
        - Order Type
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otype_id:
                  type: number
                  example: 1
                name: 
                  type: string
                  example: Test Channel 1
                description: 
                  type: string
                  example: Test Order Mode delivery mode
                order_channel_id: 
                  type: number
                  example: 2
                delivery_mode_id: 
                  type: number
                  example: 2
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
                  
    delete:
      summary: Delete Order Type
      tags:
        - Order Type
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: otype_id_list
          schema:
            type: array
            items:
              example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success

  /restaurant/verify:
    post:
      summary: Verify Store and MMID
      tags: 
        - Activation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: number
                  example: 123
                mmid:
                  type: number
                  example: 111
                token:
                  type: string
                  example: 1234968ywb

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
  
  /restaurant/check_email:
    post:
      summary: Check Email Account Exists
      tags: 
        - Activation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@test.com

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  exists:
                    type: boolean
                    example: True

  /restaurant/activate:
    post:
      summary: Verify Store and MMID
      tags: 
        - Activation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rest_id:
                  type: number
                  example: 123
                first_name:
                  type: string
                  example: Jane
                last_name:
                  type: string
                  example: Doe
                username:
                  type: string
                  example: janedoe
                temp_pin:
                  type: string
                  example: 1234
                email:
                  type: string
                  example: janedoe@gmail.com
                password:
                  type: string
                  example: 123542644
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  rest_id:
                    type: number
                    example: 123

  /restaurant/activate/mfa/verification:
    post:
      summary: One Time Pin Verification
      tags: 
        - Activation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mid:
                  type: number
                  example: 6453174824719
                store_id:
                  type: number
                  example: 232
                mfa_pin:
                  type: number
                  example: 543732

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  session_token:
                    type: string
                    example: Md62273690gB

  /restaurant/activate/mfa/resend:
    post:
      summary: One Time Pin Resend
      tags: 
        - Activation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mid:
                  type: number
                  example: 6453174824719
                store_id:
                  type: number
                  example: 232

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: Success

  /login/mfa/verification:
    post:
      summary: One Time Pin Verification
      tags: 
        - Activation
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_pin:
                  type: number
                  example: 543732

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  session_token:
                    type: string
                    example: Md62273690gB

  /login/mfa/resend:
    post:
      summary: One Time Pin Resend
      tags: 
        - Activation
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object

      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: Success

  /restaurant/reports/employee:
    get:
      summary: Get Employee Wise Report
      tags:
        - Reports
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            example: 1629779788
          required: true
          description: ""
        - in: query
          name: end_date
          schema:
            type: string
            example: 1629779788
          required: true
          description: ""
        - in: query
          name: order_types
          schema:
            type: string
            example: "1,2,3"
          required: true
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    employee_id:
                      type: number
                    employee_name:
                      type: string
                    employee_sales:
                      type: number
                    employee_tables_served:
                      type: number
                    employee_tips:
                      type: number
                    employee_hours:
                      type: number
                    employee_minutes:
                      type: number
                    employee_seconds:
                      type: number
                example:
                  - employee_id: 1
                    employee_name: Employee 1
                    employee_sales: 100
                    employee_tables_served: 10
                    employee_tips: 10
                    employee_hours: 1
                    employee_minutes: 2
                    employee_seconds: 0
                  - employee_id: 2
                    employee_name: Employee 2
                    employee_sales: 150
                    employee_tables_served: 0
                    employee_tips: 0
                    employee_hours: 0
                    employee_minutes: 0
                    employee_seconds: 0
  /restaurant/reports/order_types:
    get:
        summary: Get Order type sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: false
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          delivery_charges:
                            type: number
                          discount:
                            type: string
                          packaging_charges:
                            type: number
                          sales:
                            type: number
                          subtotal:
                            type: number
                          taxes:
                            type: number
                          transactions:
                            type: number
                          type:
                            type: string
                      example: 
                        - delivery_charges: 1
                          discount: 2
                          packaging_charges: 0
                          sales: 541.22
                          subtotal: 543.22
                          taxes: 0
                          transactions: 17
                          type: "Dine-in"
                    total_sales:
                      type: number
                      example: 799.22
                    total_transactions:
                      type: number
                      example: 30
  
  /restaurant/reports/shifts:
    get:
        summary: Get shift wise sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: false
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          delivery_charges:
                            type: number
                          discount:
                            type: string
                          packaging_charges:
                            type: number
                          sales:
                            type: number
                          subtotal:
                            type: number
                          taxes:
                            type: number
                          transactions:
                            type: number
                          type:
                            type: string
                      example: 
                        - delivery_charges: 1
                          discount: 2
                          packaging_charges: 0
                          sales: 541.22
                          subtotal: 543.22
                          taxes: 0
                          transactions: 17
                          type: "morning shift"
                    total_sales:
                      type: number
                      example: 799.22
                    total_transactions:
                      type: number
                      example: 30
  /restaurant/reports/payment_type:
    get:
        summary: Get payment type sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          delivery_charges:
                            type: number
                          discount:
                            type: string
                          packaging_charges:
                            type: number
                          sales:
                            type: number
                          subtotal:
                            type: number
                          taxes:
                            type: number
                          transactions:
                            type: number
                          type:
                            type: string
                      example: 
                        - delivery_charges: 1
                          discount: 2
                          packaging_charges: 0
                          sales: 541.22
                          subtotal: 543.22
                          taxes: 0
                          transactions: 17
                          type: "cash"
                    total_sales:
                      type: number
                      example: 799.22
                    total_transactions:
                      type: number
                      example: 30
  
  /restaurant/reports/sales:
    get:
        summary: Get sales summary
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: false
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    Total:
                      type: number
                      example: 799.22
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          sales:
                            type: number
                          type:
                            type: string
                      example: 
                        - sales: 541.22
                          type: "Sub Total"
                        - sales: 2
                          type: "Discount"
                        - sales: 1
                          type: "Tax"
                        - sales: 0
                          type: "Delivery charges"
                        - sales: 0
                          type: "Packaging charges"
 
  /restaurant/reports/get_live_sales:
    get:
        summary: Get live sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: false
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    Total:
                      type: number
                      example: 799.22
                    num_of_tables:
                      type: number
                      example: 4
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          sales:
                            type: number
                          type:
                            type: string
                      example: 
                        - sales: 541.22
                          type: "Sub Total"
                        - sales: 2
                          type: "Discount"
                        - sales: 1
                          type: "Tax"
                        - sales: 0
                          type: "Delivery charges"
                        - sales: 0
                          type: "Packaging charges"


  /restaurant/reports/top_sales_items:
    get:
        summary: Get top sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: rest_id
            schema:
              type: number
              example: 452
            required: false
            description: ""
          - in: query
            name: number_of_items
            schema:
              type: number
              example: 452
            required: false
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          quantity:
                            type: number
                          amount:
                            type: number
                      example: 
                        - name: "Pizza"
                          quantity: 100
                          amount: 500
                        - name: "Burger"
                          quantity: 90
                          amount: 450
 
  /restaurant/reports/tax:
    get:
        summary: Get tax collected
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    total_sales:
                      type: number
                      example: 799.22
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          sales:
                            type: number
                          taxable_amt:
                            type: string
                          type:
                            type: string
                      example: 
                        - sales: 10
                          taxable_amt: 10
                          type: "SGST"
                        - sales: 10
                          taxable_amt: 10
                          type: "CGST"
     
  /restaurant/reports/days:
    get:
        summary: Get daily wise sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: order_types
            schema:
              type: string
              example: "Dine-in, Takeout"
            required: true
            description: ""
          - in: query
            name: employee_id
            schema:
              type: number
              example: 1, 2, 3
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            avg_bill:
                              type: number
                            date:
                              type: string
                            delivery_charges:
                              type: number
                            final_price:
                              type: number
                            packaging_charges:
                              type: number
                            seats:
                              type: number
                            total_discount:
                              type: number
                            total_pax_bill:
                              type: number
                            total_price:
                              type: number
                            total_tax:
                              type: number
                        example: 
                          - avg_bill: 58.73
                            date: 2023-09-26
                            delivery_charges: 0
                            final_price: 230.42
                            packaging_charges: 0
                            seats: 4
                            total_discount: 3
                            total_pax_bill: 230.42
                            total_price: 227.42
                            total_tax: 0

  /restaurant/reports/items:
    get:
        summary: Get item sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: filter_by
            schema:
              type: string
              example: "All items, sold, unsold"
            required: true
            description: ""
          - in: query
            name: employee_id
            schema:
              type: number
              example: 1, 2, 3
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      menu_cat:
                        type: string
                        example: catrgory name
                      menu_cat_id:
                        type: string
                        example: 1
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  final_price:
                                    type: number
                                  item_id:
                                    type: number
                                  item_name:
                                    type: string
                                  quantity:
                                    type: number
                                  serving_id:
                                    type: number
                                  serving_name:
                                    type: string
                                  total_discount:
                                    type: number
                                  total_price:
                                    type: number
                                  total_tax:
                                    type: number
                        example: 
                          - final_price: 58.73
                            item_id: 1
                            item_name: Pizza
                            quantity: 5
                            serving_id: 1
                            serving_name: mini
                            total_discount: 3
                            total_price: 227.42
                            total_tax: 0
                            
  /restaurant/reports/modifiers:
    get:
        summary: Get modifier sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: filter_by
            schema:
              type: string
              example: "All items, sold, unsold"
            required: true
            description: ""
          - in: query
            name: employee_id
            schema:
              type: number
              example: 1, 2, 3
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      employees:
                        type: array
                        items:
                          type: object
                          properties:
                            employee_id:
                              type: number
                            full_name:
                              type: string
                        example:
                          - employee_id: 1
                            full_name: Milan
                          - employee_id: 2
                            full_name: Danny
                      reports:
                        type: array
                        items:
                          type: object
                          properties:
                            addon_cat:
                              type: string
                              example: category name
                            addon_cat_id:
                              type: number
                              example: 1
                            addons:
                              type: array
                              items:
                                type: object
                                properties:
                                  items:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        addon_id:
                                          type: number
                                        addon_name:
                                          type: string
                                        item_id:
                                          type: number
                                        item_name:
                                          type: string
                                        total_quantity:
                                          type: number
                                        total_sales:
                                          type: number
                              example: 
                                - addon_id: 1
                                  item_id: 1
                                  addon_name: pizzza addons
                                  item_name: pizza
                                  total_quantity: 14
                                  total_sales: 8.4
  
  /restaurant/reports/employees:
    get:
        summary: Get item sales
        tags:
          - Reports
        security:
          - oauth_token:  []
        parameters:
          - in: query
            name: start_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
          - in: query
            name: end_date
            schema:
              type: string
              example: 1629779788
            required: true
            description: ""
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      employees:
                        type: array
                        items:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  employee_hours:
                                    type: number
                                  employee_id:
                                    type: number
                                  employee_minutes:
                                    type: number
                                  employee_name:
                                    type: string
                                  employee_sales:
                                    type: number
                                  employee_seconds:
                                    type: string
                                  employee_tables_served:
                                    type: number
                                  employee_tips:
                                    type: number
                        example: 
                          - employee_hours: 220
                            employee_id: 1
                            employee_minutes: 3
                            employee_name: Milan
                            employee_sales: 799.33
                            employee_seconds: 33
                            employee_tables_served: 8
                            employee_tips: 0
  
  /restaurant/transaction/all:
    get:
      summary: Get All Transactions list for time range
      tags:
        - Transactions
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: start_ts
          schema:
            type: string
            example: 1629779788
          required: true
          description: ""
        - in: query
          name: end_ts
          schema:
            type: string
            example: 1629779788
          required: true
          description: ""
        - in: query
          name: limit
          schema:
            type: number
            example: 25
          required: true
        - in: query
          name: offset
          schema:
            type: number
            example: 0
          required: true
        - in: query
          name: order_types
          schema:
            type: string
            example: "1,2,3"
          description: ""
        - in: query
          name: employee_id
          schema:
            type: string
            example: "1,2,3"
          description: ""
        - in: query
          name: search_key
          schema:
            type: string
            example: "12"
          description: ""
        - in: query
          name: hawkeye_type
          schema:
            type: string
            example: "1"
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                properties:
                  total_count:
                    type: integer
                    example: 55
                  hawkeye:
                    type: object
                    properties:
                        total_non_edit_count:
                          type: integer
                          example: 28
                        total_edit_count:
                          type: integer
                          example: 1
                        total_void_count:
                          type: integer
                          example: 26
                  total_amount:
                    type: integer
                    example: 611.99
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        tx_id:
                          type: integer
                          example: 43104
                        bill_no:
                          type: integer
                          example: 2
                        otype_id:
                          type: integer
                          example: 2815
                        otype_name:
                          type: string
                          example: DineIn
                        ts:
                          type: integer
                          example: 1678431576
                        order_date:
                          type: string
                          example: "2023-03-10"
                        void:
                          type: integer
                          example: 0
                        edited:
                          type: integer
                          example: 0
                        split_mode:
                          type: string
                          example: all
                        colour_code:
                          type: integer
                          example: 0
                        final_price:
                          type: integer
                          example: 25.76
                        server_name:
                          type: string
                          example: Jagadeesh Ajjada
                        first_name:
                          type: string
                          example: Jagadeesh
                        tip_amount:
                          type: integer
                          example: 0.0
                        txn_status: 
                          type: array
                          items: 
                            type: string
                          example: [finished, void]
                        payment_mode: 
                          type: array
                          items: 
                            type: string
                          example: [Cash, Card]

  /restaurant/transaction:
    get:
      summary: Get Single Transactions
      tags:
        - Transactions
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: tx_id
          schema:
            type: string
            example: 35347
          required: true
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  tx_id: 
                    type: number
                    example: 35347
                  ts: 
                    type: number
                    example: 1629274441
                  total_price: 
                    type: number
                    example: 582.85
                  total_tax: 
                    type: number
                    example: 0
                  total_discount: 
                    type: number
                    example: 0
                  final_price: 
                    type: number
                    example: 582.85
                  delivery_charges: 
                    type: number
                    example: 0
                  packaging_charges: 
                    type: number
                    example: 0
                  bill_no: 
                    type: number
                    example: 1
                  otype_id: 
                    type: number
                    example: 2456
                  otype_name: 
                    type: string
                    example: Garden
                  split_mode: 
                    type: string
                    example: all
                  order_comment: 
                    type: string
                    example: "Table is plain"
                  table: 
                    type: object
                    properties: 
                      table_id: 
                        type: number
                        example: 3046
                      table_name: 
                        type: string
                        example: Table 1
                  guests: 
                    type: array
                    items:
                      type: object
                      properties: 
                        guest_id: 
                          type: number
                          example: 1996
                        seat_index: 
                          type: number
                          example: 1
                        status: 
                          type: number
                          example: 0
                        paid: 
                          type: number
                          example: 1
                        total_price: 
                          type: number
                          example: 343.30
                        total_tax: 
                          type: number
                          example: 0
                        total_discount: 
                          type: number
                          example: 0
                        final_price: 
                          type: number
                          example: 0
                        order_payment_id: 
                          type: number
                          example: 11
                  items: 
                    type: array
                    items:
                      type: object
                      properties: 
                        order_item_id: 
                          type: number
                          example: 116032
                        price: 
                          type: number
                          example: 8.29
                        item_name: 
                          type: string
                          example: Steamed Vegetable Momos
                        serving_id: 
                          type: number
                          example: 3692
                        serving_name: 
                          type: string
                          example: Standard
                        quantity: 
                          type: number
                          example: 1
                        custom_comment: 
                          type: string
                          example: Notes
                        kot_number: 
                          type: number
                          example: 13
                        is_refunded: 
                          type: boolean
                          example: 1
                        refunded_amount:
                          type: number
                          example: 25
                        addons: 
                          type: array
                          items: 
                            type: object
                            properties:
                              addon_id: 
                                type: number
                                example: 143
                              name: 
                                type: string
                                example: Chicken
                              price: 
                                type: string
                                example: 2
                              quantity: 
                                type: number
                                example: 2
                        
                        splits: 
                          type: array
                          items: 
                            type: object
                            properties: 
                              guest_id: 
                                type: number
                                example: 1999
                              split_price: 
                                type: number
                                example: 8.29
                              split_tax: 
                                type: number
                                example: 0
                              split_discount: 
                                type: number
                                example: 0
                              split_final_price: 
                                type: number
                                example: 0
                              split_quantity: 
                                type: string
                                example: 1/1
                        edits: 
                          type: array
                          items: 
                            type: object
                            properties: 
                              kot_id: 
                                type: number
                                example: 13
                              server_name: 
                                type: string
                                example: Test
                              old_quantity: 
                                type: number
                                example: 2
                              new_quantity: 
                                type: number
                                example: 1
                              old_serving: 
                                type: string
                                example: null
                              new_serving: 
                                type: string
                                example: null
                              old_comment: 
                                type: string
                                example: null
                              new_comment: 
                                type: string
                                example: Notes
                              addon_name: 
                                type: string
                                example: null
                              quantity: 
                                type: string
                                example: null
                  discounts: 
                    type: array
                    items:
                      example: []
                  payments: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        order_payment_detail_id: 
                          type: number
                          example: 21
                        order_payment_id: 
                          type: number
                          example: 11
                        ptype_id: 
                          type: number
                          example: 246
                        amount: 
                          type: number
                          example: 582.85
                        comment: 
                          type: string
                          example: Payment comment
                        payment_txn_number: 
                          type: number
                          example: 4432
                        card_type: 
                          type: string
                          example: master
                        payment_order_number:
                          type: string
                          example: U787Y78Y87Y8
                  footprint: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        ts: 
                          type: number
                          example: 1629274458
                        operation: 
                          type: number
                          example: 0
                        server_name: 
                          type: string
                          example: Chandra Pavan
                        custom_info: 
                          type: object
                          properties: 
                            kot_number: 
                              type: number
                              example: 1
                        reason: 
                          type: string
                          format: nullable
                  taxes: 
                    type: array
                    items:
                      example: []
                  refund: 
                    type: array
                    items: 
                      type: object
                      properties:
                        refund_id: 
                          type: number
                          example: 123
                        refund_type: 
                          type: string
                          example: RefundByItem
                        refund_reason: 
                          type: string
                          example: Out of stock
                        refund_amount: 
                          type: number
                          example: 10
                        refund_percentage: 
                          type: string
                          example: null
                        employee_name: 
                          type: string
                          example: John
                        refund_payment_details:
                          type: array
                          items:
                            type: object 
                            properties:
                              refund_amount: 
                                type: number
                                example: 10
                              modify_txn_number:
                                type: number
                                example: 145271
                              is_gift_card:
                                type: boolean
                                example: 1
                              customer_id:
                                type: number
                                example: 324
                              refund_comment:
                                type: string
                                example: Refund comment

  /restaurant/promotion:
    get:
      summary: Get All Promotions
      tags:
        - Promotions
      security:
        - oauth_token:  []
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    promotion_id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: Flat 10% discounts
                    description:
                      type: string
                      example: ""
                    discount:
                      type: number
                      example: 10
                    discount_type: 
                      type: string
                      example: flat or percentage
                    active:
                      type: number
                      example: 1
    
    post:
      summary: Create Promotion Discount
      tags:
        - Promotions
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Flat 10% discounts
                description:
                  type: string
                  example: ""
                discount:
                  type: number
                  example: 10
                discount_type: 
                  type: string
                  example: flat or percentage
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    
    put:
      summary: Edit Promotion Discount
      tags:
        - Promotions
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                promotion_id:
                  type: number
                  example: 123
                name:
                  type: string
                  example: Flat 10% discounts
                description:
                  type: string
                  example: ""
                discount:
                  type: number
                  example: 10
                discount_type: 
                  type: string
                  example: flat or percentage
                active:
                  type: number
                  example: 1
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success

    delete:
      summary: Delete Promotion Discount
      tags:
        - Promotions
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: promotion_id_list
          schema:
            type: array
            items:
              example: [1]
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success

  /restaurant/menu/category/addons:
    post:
      summary:  Create Addon Category And Addons
      tags:
        - Addon Category And Addons
      security:
        - oauth_token:  []
      description: |
        <ul>
          <li>addon_cat_name: (string, required) - Addon category Name</li>
          <li>addon_item_name: (string) - Addon Category Name</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addon_cat_name:
                  type: string
                  example: Starter
                addon_items:
                  type: array
                  items:
                    example:
                      - cheese
                      - mayonnaise
                      - flakes
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    get:
      summary:  Get Addon Items With Category
      tags:
        - Addon Category And Addons
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: addon_cat_id
          schema:
            type: string
            example: 1
          description: ""
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema:
                properties:
                  addon_cat_id:
                    type: number
                    example: 1
                  addon_cat_name:
                    type: string
                    example: Starter
                  addon_items:
                    type: array
                    items:
                      type: object
                      properties:
                        addon_item_id:
                          type: number
                        addon_item_name:
                          type: string
                        base_price:
                          type: number
                    example:
                      - addon_item_id: 1
                        addon_item_name: cheese
                        base_price: 5
                      - addon_item_id: 2
                        addon_item_name: mayonnaise
                        base_price: 5
                      - addon_item_id: 3
                        addon_item_name: flakes
                        base_price: 5
    put:
      summary:  Edit Addon Items with Category
      tags:
        - Addon Category And Addons
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addon_cat_id:
                    type: number
                    example: 1
                addon_cat_name:
                  type: string
                  example: Starter
                addon_items:
                  type: array
                  items:
                    type: object
                    properties:
                      addon_item_id:
                        type: number
                      addon_item_name:
                        type: string
                  example:
                    - addon_item_id: 1
                      addon_item_name: cheese
                    - addon_item_id: 2
                      addon_item_name: mayonnaise
                    - addon_item_name: flakes
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    delete:
      summary:  Delete Addon Category
      tags:
        - Addon Category And Addons
      security:
        - oauth_token:  []
      parameters:
        - in: query
          name: id
          schema:
            type: number
            example: 1
      responses:
        '200':    # status code
          description: ""
          content:
            application/json:
              schema: 
                type: object  
                properties:
                  status:
                    type: string
                    example:  success
  /restaurant/help/support:
    post:
      summary: Help And Support
      tags:
        - Help And Support
      parameters:
        - in: header
          name: oauth_token
          schema:
            type: string
            example: token
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: John123@gmail.com
                phone: 
                  type: number
                  example: 8764352718
                application:
                  type: string
                  example: Go Appetit app
                preferred_contact:
                  type: string
                  example: phone / email
                comment:
                  type: string
                  example: Need to contact 
      responses:
        '200': # status code
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Successfully
                    
  /restaurant/items/type:
    put:
      summary: Item Type Status Edit
      tags: 
        - Item Type
      security:
        - oauth_token:  []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type_id:
                  type: number
                  example: 1
                status: 
                  type: number
                  example: 1
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example:  success
    get:
      summary: Get All Item Type
      tags: 
        - Item Type
      security:
        - oauth_token:  []
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    item_type_id: 
                      type: number
                    item_type_name: 
                      type: string
                    item_type_code: 
                      type: string
                    byo_type_id: 
                      type: number
                    byo_type_name: 
                      type: string
                    byo_type_code: 
                      type: string
                    status: 
                      type: number
                example:
                  - item_type_id: 1
                    item_type_name: Food item
                    item_type_code: Food
                    byo_type_id: null
                    byo_type_name: null
                    byo_type_code: null
                    status: 1
                  - item_type_id: 4
                    item_type_name: Build-your-own item
                    item_type_code: Byo
                    byo_type_id: 1
                    byo_type_name: Build-your-own pizza
                    byo_type_code: Pizza
                    status: 1
                    
  /restaurant/settings/shifts:
    get:
        summary: Get shifts
        tags:
          - Shifts
        security:
          - oauth_token:  []
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      shifts:
                        type: array
                        items:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  end_time:
                                    type: string
                                  name:
                                    type: string
                                  shift_id:
                                    type: number
                                  start_time:
                                    type: string
                        example: 
                          - end_time: 01:00:00
                            name: Milan
                            shift_id: 490
                            start_time: 00:00:00
    delete:
        summary: delete shifts
        tags:
          - Shifts
        security:
          - oauth_token:  []
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      shifts:
                        type: array
                        items:
                          type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  end_time:
                                    type: string
                                  name:
                                    type: string
                                  shift_id:
                                    type: number
                                  start_time:
                                    type: string
                        example: 
                          - end_time: 01:00:00
                            name: Milan
                            shift_id: 490
                            start_time: 00:00:00
    put:
        summary: create shifts
        tags:
          - Shifts
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  end_time:
                      type: string
                      example: 00:03
                  name:
                    type: string
                    example: Morning shift
                  start_time:
                    type: string
                    example: 11:02
                      
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      status:
                        type: number
                        example: 200
                      message:
                        type: string
                        example: Ok
                        
    post:
        summary: update shifts
        tags:
          - Shifts
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  end_time:
                      type: string
                      example: 00:03
                  name:
                    type: string
                    example: Morning shift
                  start_time:
                    type: string
                    example: 11:02
                  shift_id:
                    type: number
                    example: 525
                      
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      status:
                        type: number
                        example: 200
                      message:
                        type: string
                        example: Ok

  /login:
    post:
        summary: Merchant Login
        tags:
          - Authentication
        security:
          - oauth_token:  []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                      type: string
                      example: useremail@example.com
                  password:
                    type: string
                    example: Password@1234
                  session_token:
                    type: string
                    example: ah3079596535qn
                      
        responses:
          '200':    # status code
            description: ""
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      oauth_token:
                        type: string
                        example: Pc659d28fbDn348elqzvJtTFWKKqvUjM
                      refresh_token:
                        type: string
                        example: oecAiMfy659d28fbAxASOzfO348hR0ac1f1755VOqIukFcwTQuyKDIIEDcqtktGTkjunpCXjJCHckUpXrrHCKAyVGufsZOnPsvyMKcjDKoWGtnAbMcFcfzjqjVqPUjcw
                      employee_id:
                        type: number
                        example: 101
                      name:
                        type: string
                        example: Milan
                      email:
                        type: string
                        example: useremail@example.com
                      resturants:
                        type: array
                        items:
                          example: [
                            {
                              rest_id: 452,
                              name: resturant name,
                              permission: {
                                56: 1,
                                57: 1,
                                58: 1,
                                59: 1,
                                60: 1,
                                61: 1,
                                62: 1,
                                63: 1,
                                64: 1,
                                65: 1,
                                66: 1,
                                67: 1,
                                69: 1,
                                70: 1,
                                71: 1,
                                72: 1,
                                73: 1,
                                74: 1,
                                75: 1,
                                76: 1,
                                77: 1,
                                78: 1,
                                79: 1,
                                80: 1,
                                81: 1,
                                82: 1,
                              },
                              role_name: super Admin,
                              role_id: 1043,
                              tz: Asia/Kolkata,
                              status: 1,
                              is_super_admin: 1,
                              landmark: Hyderabad
                            }
                            ]
                      policy_accept_status:
                        type: number
                        example: 1
                      password_expired:
                        type: boolean
                        example: true
                      mfa_session_token:
                        type: boolean
                        example: true
                      auto_save_interval:
                        type: number
                        example: 10
                      session_size:
                        type: number
                        example: 30
  
  /resetemail:
    post:
          summary: Forgot password
          tags:
            - Authentication
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    email:
                        type: string
                        example: useremail@example.com
                        
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /logout:
    post:
          summary: Logout
          tags:
            - Authentication
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    oauth_token:
                        type: string
                        example: lp659fc249Lm348eEotceeRMEtRjwqfO
                        
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
                          
  /reset:
    put:
          summary: Password reset
          tags:
            - Authentication
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    password:
                        type: string
                        example: Password@1234
                    token:
                      type: string
                      example: SC2053943048WL
                        
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
                          
  /branch/reports/total_sales:
    get:
          summary: Get total sales
          tags:
            - List of restuarants
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: start_date
              schema:
                type: number
                example: 1704825000
              required: true
            - in: query
              name: end_date
              schema:
                type: number
                example: 1704825000
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        rest_id:
                          type: number
                          example: 452
                        total_sales:
                          type: number
                          example: 156
  /restaurant/reports/custom:
    put:
          summary: Custom sales
          tags:
            - Dashboard
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    cat_id:
                        type: array
                        items:
                          example: [1, 2]
                    category_grouping:
                      type: array
                      items:
                        example: [{
                          cat_id_list: [724, 725],
                          category_grouping: [{
                            group_name: Test,
                            list: [{
                              cat_id: 826,
                              final_price: 0,
                              name: "test",
                              quantity: 1,
                              total_discount: 0,
                              total_tax: 0,
                              total_price: 0
                            }]
                          }],
                        }
                          ]
                    item_id_list: 
                      example: [121,122]
                        
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
    get:
          summary: Custom categories
          tags:
            - Reports
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: start_date
              schema:
                type: number
                example: 1704825000
              required: true
            - in: query
              name: end_date
              schema:
                type: number
                example: 1704825000
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        cat_id:
                          type: array
                          items:
                            example: [1, 2]
                        category_grouping:
                          type: array
                          items:
                            example: [{
                              cat_id_list: [724, 725],
                              category_grouping: [{
                                group_name: Test,
                                list: [{
                                  cat_id: 826,
                                  final_price: 0,
                                  name: "test",
                                  quantity: 1,
                                  total_discount: 0,
                                  total_tax: 0,
                                  total_price: 0
                                }]
                              }],
                            }
                              ]
                        item_id_list: 
                          example: [121,122]
                        data:
                          example: {
                            category_info: {
                              cat_id: 826,
                              final_price: 0,
                              name: "test",
                              quantity: 1,
                              total_discount: 0,
                              total_tax: 0,
                              total_price: 0
                            },
                            item_info: {
                              item_id: 826,
                              final_price: 0,
                              name: "test",
                              quantity: 1,
                              total_discount: 0,
                              total_tax: 0,
                              total_price: 0
                            }
                          }
                    
  /restuarant/pettycash/reports:
    get:
          summary: get Petty cash details
          tags:
            - Reports
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: start_date
              schema:
                type: number
                example: 1704825000
              required: true
            - in: query
              name: end_date
              schema:
                type: number
                example: 1704825000
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        closing_balance:
                          example: 0
                        credit_amount:
                          example: 181
                        debit_amount:
                          example: 11
                        opening_balance:
                          example: 100
                        total_txns:
                          example: [
                            {
                              amount: 0,
                              cat_id: 138,
                              cat_name: 'rice',
                              debited: 0,
                              txn_id: 329
                            }]

  /restuarant/reports/item/alochol:
    get:
          summary: get alochol sales
          tags:
            - Reports
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: start_date
              schema:
                type: number
                example: 1704825000
              required: true
            - in: query
              name: end_date
              schema:
                type: number
                example: 1704825000
              required: true
            - in: query
              name: order_types
              schema:
                type: string
                example: takeout
              required: true
            - in: query
              name: employee_id
              schema:
                type: number
                example: 14
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        total_count:
                          example: 1
                        sales:
                          example: [
                            {
                              price: 11,
                              date: "2023-03-09",
                              order_type: 'takeout',
                              otype_id: 2871,
                              txn_id: 329
                            }]

  /restaurant/menu/items/:
    delete:
          summary: Delete all items
          tags:
            - Menu
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: offset
              schema:
                type: number
                example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/menu/categories/positions:
    put:
          summary: Positions
          tags:
            - Menu
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    postions:
                      example: [[892,1], [890, 2], [893, 3]]
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
    get:
          summary: get all addons
          tags:
            - Addon Category And Addons
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              {
                                addon_cat_id: 1,
                                addon_cat_name: Drinks,
                                addon_category_items: [{
                                  addon_item_id: 803,
                                  addon_item_name: Thums up,
                                  base_price: 1
                                },
                                {
                                  addon_item_id: 804,
                                  addon_item_name: coke,
                                  base_price: 1
                                }]
  
                              }
  /restaurant/dietary/attribute:
    get:
          summary: get all addons
          tags:
            - Dietary attributes
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              {
                                [{
                                  dietary_attribute_id: 101,
                                  name: Thums up
                                },
                                {
                                  dietary_attribute_id: 102,
                                  name: coke
                                }]
                              }
    put:
          summary: edit attribute
          tags:
            - Dietary attributes
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    dietary_attribute_id:
                      type: number
                      example: 9
                    name:
                      type: string
                      example: ketchups
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
    post:
          summary: edit attribute
          tags:
            - Dietary attributes
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      example: ketchups
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
    delete:
          summary: delete attribute
          tags:
            - Dietary attributes
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: id
              schema:
                type: array
                items:
                  example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/kitchen:
        get:
          summary: get all Kitchens
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              {
                                [{
                                  kitchen_id: 519,
                                  name: Kitchen 1,
                                  description: ,
                                  is_default: 1
                                },
                                {
                                  kitchen_id: 520,
                                  name: Kitchen 2,
                                  description: ,
                                  is_default: 0
                                }]
                              }
        put:
          summary: edit Kitchen
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    kitchen_id:
                      type: number
                      example: 519
                    name:
                      type: string
                      example: Kitchen 1
                    description:
                      type: string
                      example: ''
                    is_default:
                      type: string
                      example: 1
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        post:
          summary: create Kitchen
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Kitchen 1
                    description:
                      type: string
                      example: ''
                    is_default:
                      type: boolean
                      example: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        delete:
          summary: delete Kitchens
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: id
              schema:
                type: array
                items:
                  example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/kitchen/assign_kitchen:
        get:
          summary: get all assign Kitchens
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              {
                                [{
                                  kitchen_id: 519,
                                  kitchen_name: Kitchen 1,
                                  menu_cat_id: 1,
                                  menu_cat_name: category 1
                                },
                                {
                                  kitchen_id: 520,
                                  kitchen_name: Kitchen 2,
                                  menu_cat_id: 2,
                                  menu_cat_name: category 2
                                }]
                              }
        post:
          summary: assign Kitchen
          tags:
            - Kitchens
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                        example: [{
                          kitchen_id: 519,
                          kitchen_name: Kitchen 1,
                          menu_cat_id: 2,
                          menu_cat_name: category 1
                        },
                        {
                          kitchen_id: 520,
                          kitchen_name: Kitchen 2,
                          menu_cat_id: 3,
                          menu_cat_name: category 2
                        }]
                        
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/settings/taxes/get_all_profiles:
        get:
          summary: get all taxes
          tags:
            - Taxes
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              {
                                [{
                                  taxp_id: 599,
                                  name: Tax 1,
                                  desc: "",
                                  cat_names: [category 1, category 2]
                                },
                                {
                                  taxp_id: 600,
                                  name: Tax 2,
                                  desc: "",
                                  cat_names: [category 3, category 4]
                                }]
                              }
  /restaurant/settings/taxes:
        get:
          summary: get tax data
          tags:
            - Taxes
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: taxp_id
              schema:
                type: number
                example: 1
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              desc: ""
                              name: Tax name
                              taxes: [{
                                context_tax_id: 1,
                                context_tax_name: vat,
                                name: GST,
                                operator: '%',
                                tax_id: 1149,
                                value: 10
                              }]
                              taxp_id: 794
        put:
          summary: Edit tax
          tags:
            - Taxes
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    desc:
                      type: string
                      example: ""
                    name:
                      type: string
                      example: Tax name
                    taxes:
                      example: [{
                        context_tax_id: 1,
                        context_tax_index: -1,
                        name: GST,
                        operator: "%",
                        value: 10
                      }]
                    taxp_id:
                      type: number
                      example: 794
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok 
        post:
          summary: Create tax
          tags:
            - Taxes
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    desc:
                      type: string
                      example: ""
                    name:
                      type: string
                      example: Tax name
                    taxes:
                      example: [{
                        context_tax_id: 1,
                        context_tax_index: -1,
                        name: GST,
                        operator: "%",
                        value: 10
                      }]
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        delete:
          summary: Delete Taxes
          tags:
            - Taxes
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: id
              schema:
                type: array
                items:
                  example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/settings/taxes/assign:
        get:
          summary: get Assign Taxes
          tags:
            - Taxes
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                              associations: [{
                                cat_id: 1,
                                otype_id: 1,
                                taxp_id: 522
                              },
                              {
                                cat_id: 2,
                                otype_id: 2,
                                taxp_id: 523
                              }]
                              item_categories: [{
                                cat_id: 1,
                                kitchen_id: 522,
                                last_updated_on: 1689167662,
                                name: startres,
                                order: 0
                              },
                              {
                                cat_id: 2,
                                kitchen_id: 523,
                                last_updated_on: 1689167662,
                                name: Combo,
                                order: 1
                              }]
                              order_types: [{
                                delivery_mode_id: 1,
                                description: "",
                                name: Takeout,
                                order_channel_id: 1,
                                otype_id: 1
                              },
                              {
                                delivery_mode_id: 2,
                                description: "",
                                name: Dine in,
                                order_channel_id: 2,
                                otype_id: 2
                              }]
                              tax_profiles: [{
                                cat_names: cat_name 1,
                                desc: '',
                                name: GST,
                                taxp_id: 459
                              },
                              {
                                cat_names: cat_name 2,
                                desc: '',
                                name: CGST,
                                taxp_id: 460
                              }]
        post:
          summary: assign tax
          tags:
            - Taxes
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      example: [[2871, 423, 1], [2872, 424, 1], [2873, 425, 1]]
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/delivery/option:
        get:
          summary: get all Delivery options
          tags:
            - Delivery options
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: taxp_id
              schema:
                type: number
                example: 1
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                               [{
                                delivery_option_id: 1,
                                description: '',
                                name: Delivery option name,
                              },
                              {
                                delivery_option_id: 2,
                                description: '',
                                name: Delivery option name 2,
                              }]
        post:
          summary: Create delivery option
          tags:
            - Delivery options
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    description:
                      example: ''
                    name: 
                      example: Delivery option name
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok 
        put:
          summary: Edit delivery option
          tags:
            - Delivery options
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    delivery_option_id:
                      example: 1
                    description:
                      example: ''
                    name: 
                      example: Delivery option name
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        delete:
          summary: Delete options
          tags:
            - Delivery options
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: id
              schema:
                type: array
                items:
                  example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/settings/rememberme:
        get:
          summary: Remember Login
          tags:
            - Remember Login
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                               remember_login: true
        put:
          summary: Update Remember login
          tags:
            - Remember Login
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    remember_login:
                      example: false
                    rest_id:
                      example: 452
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/pettycash/session:
        get:
          summary: get session details
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                               session_status: 1
                               session_date: 2024-01-18
        post:
          summary: create session
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    opening_balance:
                      example: 100
                    session_status:
                      example: 1
                    start_date:
                      example: 1-18-2024
                    start_ts:
                      example: 17055162000
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        put:
          summary: stop session
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ts:
                      example: 1705585453
                    txn_date:
                      example: 2024-01-18
                    txns:
                      example: [{
                        amount: 10,
                        cat_id: 138,
                        notes: "",
                        tx_type: 0
                      }]
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/pettycash/expenses:
        get:
          summary: get expenses data
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: datestr
              schema:
                type: string
                example: 2024-01-18
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example:
                               opening_balance: 100
                               active: 1
                               expenses: [{
                                 amount: 10,
                                 cat_id: 138,
                                 name: Milan,
                                 notes: '',
                                 ts: 1705585453,
                                 tx_type: 0,
                                 txn_id: 558,
                                 u_id: 840
                               }]
        post:
          summary: create expenses
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    session_date:
                      example: 2024-01-18
                    session_status:
                      example: 0
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
  /restaurant/pettycash/categories:
        get:
          summary: get categories data
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            example: 
                            - {
                             cat_id: 138,
                             cat_name: cat name 1,
                             description: ''
                            }
                            - {
                             cat_id: 139,
                             cat_name: cat name 2,
                             description: ''
                            }
        post:
          summary: create categories
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    cat_name:
                      example: cat name 1
                    description:
                      example: ''
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        put:
          summary: edit categories
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    cat_name:
                      example: cat name 1
                    description:
                      example: ''
                    cat_id:
                      example: 11
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok
        delete:
          summary: Delete categories
          tags:
            - Petty cash
          security:
            - oauth_token:  []
          parameters:
            - in: query
              name: id
              schema:
                type: array
                items:
                  example: 1, 2, 3
              required: true
          responses:
            '200':    # status code
              description: ""
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        status:
                          type: number
                          example: 200
                        message:
                          type: string
                          example: Ok